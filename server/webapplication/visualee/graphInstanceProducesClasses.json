{"nodes":[{"name":"ConfigurationProducer","group":3,"description":"<nobr>Package: poolingpeople.webapplication.business.configuration.boundary</nobr><br/><br/>Injects:<br/><nobr>Configurator is injected</nobr><br/><br/>Produces:<br/><nobr>Produces String</nobr><br/><nobr>Produces Long</nobr><br/><nobr>Produces Integer</nobr><br/><nobr>Produces Boolean</nobr>","sourcecode":"package poolingpeople.webapplication.business.configuration.boundary;\n\nimport javax.enterprise.inject.Produces;\nimport javax.enterprise.inject.spi.AnnotatedField;\nimport javax.enterprise.inject.spi.InjectionPoint;\nimport javax.inject.Inject;\n\nimport poolingpeople.webapplication.business.configuration.control.Configurator;\n\npublic class ConfigurationProducer {\n\t@Inject\n\tConfigurator configurator;\n\t\n\t@Produces \n\tpublic String injectStringValue(InjectionPoint point) {\n\t\treturn (hasFieldAnnotation(point)) ? configurator.getStringValue(getValueFromAnnotation(point)) : \"\";\n\t}\n\n\t@Produces \n\tpublic long injectLongValue(InjectionPoint point) {\n\t\treturn (hasFieldAnnotation(point)) ? configurator.getLongValue(getValueFromAnnotation(point)) : 0;\n\t}\n\t\n\t@Produces \n\tpublic int injectIntValue(InjectionPoint point) {\n\t\treturn (hasFieldAnnotation(point)) ? configurator.getIntValue(getValueFromAnnotation(point)) : 0;\n\t}\n\t\n\t@Produces \n\tpublic boolean injectBooleanValue(InjectionPoint point) {\n\t\treturn (hasFieldAnnotation(point)) ? configurator.getBooleanValue(getValueFromAnnotation(point)) : false;\n\t}\n\t\n\tprivate String getValueFromAnnotation(InjectionPoint point) {\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tAnnotatedField&lt;Configurable&gt; field = (AnnotatedField&lt;Configurable&gt;) point.getAnnotated();\n\t\tConfigurable configuration = field.getAnnotation(Configurable.class);\n\t\treturn (configuration != null) ? configuration.value() : \"\";\n\t}\n\n\tprivate boolean hasFieldAnnotation(InjectionPoint point) {\n\t\treturn (point.getAnnotated() == null || !(point.getAnnotated() instanceof AnnotatedField)) ? false : true; \n\t}\n}\n","id":0},{"name":"Boolean","group":4,"description":"<nobr>Package: null</nobr>","sourcecode":"Not available","id":1},{"name":"WhateverLogger","group":8,"description":"<nobr>Package: poolingpeople.webapplication.business.logging.boundary</nobr>","sourcecode":"package poolingpeople.webapplication.business.logging.boundary;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * WhateverLogger is effectively a simple delegating object to an real Logger instance created by LoggerProducer\n * @see LoggerProducer\n */\npublic interface WhateverLogger {\n\tpublic void log(Level logLevel, String message, Object[] args);\n\tpublic Logger getLogger();\n}\n","id":2},{"name":"LoggerProducer","group":8,"description":"<nobr>Package: poolingpeople.webapplication.business.logging.boundary</nobr><br/><br/>Injects:<br/><nobr>Boolean is injected</nobr><br/><br/>Produces:<br/><nobr>Produces WhateverLogger</nobr><br/><nobr>Produces Logger</nobr>","sourcecode":"package poolingpeople.webapplication.business.logging.boundary;\n\nimport java.util.logging.Logger;\n\nimport javax.enterprise.inject.Produces;\nimport javax.enterprise.inject.spi.InjectionPoint;\nimport javax.inject.Inject;\n\nimport poolingpeople.webapplication.business.configuration.boundary.Configurable;\n\n/**\n * LoggerProduces creates depending on the isLogging flag a WhateverLogger for an injected instance \n * Also it creates a standard Logger for the LoggerInterceptor\n */\npublic class LoggerProducer {\n\t@Inject @Configurable(\"isLogging\")\n\tprivate boolean isLogging;\n\t\n\t@Produces \n\tpublic WhateverLogger produceLoggerInstance(InjectionPoint point) {\n\t\tString className = point.getMember().getDeclaringClass().getName();\n\t\treturn (isLogging) ? new SimpleLogger(className) : new NullableLogger(); \n\t}\n\t\n\t@Produces\n\tpublic Logger produceStandardLogger(InjectionPoint point) {\n\t\tString className = point.getMember().getDeclaringClass().getName();\n\t\treturn Logger.getLogger(className);\n\t}\n}\n","id":3},{"name":"Integer","group":4,"description":"<nobr>Package: null</nobr>","sourcecode":"Not available","id":4},{"name":"Logger","group":4,"description":"<nobr>Package: null</nobr>","sourcecode":"Not available","id":5},{"name":"Long","group":4,"description":"<nobr>Package: null</nobr>","sourcecode":"Not available","id":6},{"name":"String","group":4,"description":"<nobr>Package: null</nobr>","sourcecode":"Not available","id":7}],"links":[{"source":3,"target":2,"value":1,"type":"PRODUCES"},{"source":3,"target":5,"value":1,"type":"PRODUCES"},{"source":0,"target":7,"value":1,"type":"PRODUCES"},{"source":0,"target":6,"value":1,"type":"PRODUCES"},{"source":0,"target":4,"value":1,"type":"PRODUCES"},{"source":0,"target":1,"value":1,"type":"PRODUCES"}]}
