(function(){"use strict";angular.module("frontendPrototypeApp",["ngAnimate"]).constant("typeNames",{ELEMENT:"Element",CONTEXT:"Context",BCE:"Bce",TASK:"Task",DATA:"Data",POOL:"Pool",PEOPLE:"People",COMPETENCE:"Competence",COMMUNICATION:"Communication",EVENT:"Event"}).run(function(){String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)};_.mixin({typeOf:function(obj){if(obj===null){return"null"}var t=typeof obj;switch(t){case"function":case"object":if(obj.constructor){if(obj.typeName){return obj.typeName}else if(obj.constructor.name){return obj.constructor.name}else{var match=obj.constructor.toString().match(/^function (.+)\(.*$/);if(match){return match[1]}}}return Object.prototype.toString.call(obj).match(/^\[object (.+)\]$/)[1];default:return t.capitalize()}}})})})();(function(){"use strict";angular.module("frontendPrototypeApp").controller("MainCtrl",["$scope","$rootScope","DataService","ModelsService","PersistedModelsService","Resource",function($scope,$rootScope,DataService,ModelsService,PersistedModelsService,Resource){$scope.menu={collapsed:false,collapse:function(){this.sections.collapseAll(true);this.collapsed=!this.collapsed},sections:{collapseAll:function(homeToo){_.each(_.omit(this,homeToo?"":"home"),function(subsection){subsection.expanded=false})},home:{expanded:false},tasks:ModelsService.section({subsections:{mine:ModelsService.subsection({label:"My Tasks"}),requests:ModelsService.subsection({label:"Requests"}),bookmarked:ModelsService.subsection({label:"Bookmarked"})}}),people:ModelsService.section({subsections:{mine:ModelsService.subsection({label:"My Created Users"}),requests:ModelsService.subsection({label:"Friends"}),bookmarked:ModelsService.subsection({label:"Suggested"})}}),channel:ModelsService.section({subsections:{requests:ModelsService.subsection({label:"Latest updates"})}}),competences:ModelsService.section({subsections:{mine:ModelsService.subsection({label:"My Competences"}),requests:ModelsService.subsection({label:"Related"}),bookmarked:ModelsService.subsection({label:"Bookmarked"})}}),pools:ModelsService.section({subsections:{mine:ModelsService.subsection({label:"My Pools"}),requests:ModelsService.subsection({label:"Requests"}),bookmarked:ModelsService.subsection({label:"Bookmarked"})}})}};$scope.bces=ModelsService.bceCollection();$scope.$on("resourceDeleted",function(event,resourceId,resource){var index=$scope.bces.indexOfResource(resourceId);if(index!==-1){$scope.bces.remove($scope.bces.get(index))}switch(_.typeOf(resource)){case"Task":removeTask(resource);break;case"Competence":removeCompetence(resource);break;case"People":removePeople(resource);break;case"Pool":removePool(resource);break}});$scope.$on("resourceCreated",function(event,resourceId,resource){switch(_.typeOf(resource)){case"Task":addMenuTask(resourceId);break;case"Competence":addMenuCompetence(resourceId);break;case"People":addMenuPeople(resourceId);break;case"Pool":addMenuPool(resourceId);break}});$scope.$on("expandBce",function(event,options){var newBce=ModelsService.bce({resourceId:options.resourceId||options.bce.resourceId});$scope.bces.add(newBce);if(options.callback){options.callback(newBce)}$("html, body").animate({scrollTop:0},{easing:"easeInOutCirc"})});$scope.$on("taskDeleted",removeTask);$scope.$on("poolDeleted",removePool);$scope.$on("peopleDeleted",removePeople);$scope.$on("competenceDeleted",removeCompetence);$scope.$on("taskCreated",addMenuTask);$scope.$on("poolCreated",addMenuPool);$scope.$on("peopleCreated",addMenuPeople);$scope.$on("competenceCreated",addMenuCompetence);var addMenuTask=function(taskId){$scope.menu.sections.tasks.subsections.mine.add(Resource.get(taskId))},addMenuCompetence=function(competenceId){$scope.menu.sections.competences.subsections.mine.add(Resource.get(competenceId))},addMenuPeople=function(peopleId){$scope.menu.sections.people.subsections.mine.add(Resource.get(peopleId))},addMenuPool=function(poolId){$scope.menu.sections.pools.subsections.mine.add(Resource.get(poolId))};var removeTask=function(task){$scope.menu.sections.tasks.remove(task)},removePool=function(pool){$scope.menu.sections.pools.remove(pool)},removePeople=function(people){$scope.menu.sections.people.remove(people)},removeCompetence=function(competence){$scope.menu.sections.competences.remove(competence)};$scope.addPeople=function(bce,peopleId){var resourceObject=Resource.get(bce.resourceId);resourceObject.addPeople(peopleId).then(function(){bce.modules.people.resources.addToCollection(peopleId)})};$scope.addPool=function(bce,poolId){var resourceObject=Resource.get(bce.resourceId);resourceObject.addPool(poolId).then(function(){bce.modules.pools.resources.addToCollection(poolId)})};$scope.addTask=function(bce,taskId){var resourceObject=Resource.get(bce.resourceId);resourceObject.addTask(taskId).then(function(){bce.modules.tasks.resources.addToCollection(taskId)})};$scope.addCompetence=function(bce,competenceId){var resourceObject=Resource.get(bce.resourceId);resourceObject.addCompetence(competenceId).then(function(){bce.modules.competences.resources.addToCollection(competenceId)})};$scope.newPeople=function(peopleId){if(peopleId){$scope.bces.add(ModelsService.bce({resourceId:peopleId,icon:"briefcase"}))}else{var newPeople=PersistedModelsService.people({creator:"1"});var newBce=ModelsService.bce({resource:newPeople,icon:"briefcase"}).edit();$scope.bces.add(newBce)}$("html, body").animate({scrollTop:0},{easing:"easeInOutCirc"})};$scope.newPool=function(poolId){if(poolId){$scope.bces.add(ModelsService.bce({resourceId:poolId,icon:"briefcase"}))}else{var newPool=PersistedModelsService.pool({creator:"1"});var newBce=ModelsService.bce({resource:newPool,icon:"briefcase"}).edit();$scope.bces.add(newBce)}$("html, body").animate({scrollTop:0},{easing:"easeInOutCirc"})};$scope.newTask=function(taskId){if(taskId){$scope.bces.add(ModelsService.bce({resourceId:taskId,icon:"list-alt"}))}else{var newTask=PersistedModelsService.task({creator:"1"});var newBce=ModelsService.bce({resource:newTask,icon:"list-alt"}).edit();$scope.bces.add(newBce)}$("html, body").animate({scrollTop:0},{easing:"easeInOutCirc"})};$scope.newCompetence=function(competenceId){if(competenceId){$scope.bces.add(ModelsService.bce({resourceId:competenceId,icon:"briefcase"}))}else{var newCompetence=PersistedModelsService.competence({creator:"1"});var newBce=ModelsService.bce({resource:newCompetence,icon:"briefcase"}).edit();$scope.bces.add(newBce)}$("html, body").animate({scrollTop:0},{easing:"easeInOutCirc"})};$scope.create=function(){$scope.createBox=true};$scope.toggleLogin=function(){$scope.logged=!$scope.logged;$scope.menu.sections.collapseAll();if($scope.logged){PersistedModelsService.getUserAllModelsInfo(1).then(function(data){$scope.menu.sections.tasks.subsections.mine.collection=data.tasks;$scope.menu.sections.pools.subsections.mine.collection=data.pools;$scope.menu.sections.competences.subsections.mine.collection=data.competences;$scope.menu.sections.people.subsections.mine.collection=data.people})}}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").service("Resource",[function(){var resources={};return{set:function(object){resources[object.getId()]=object},get:function(id){return resources[id]},unset:function(id){delete resources[id]}}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").service("API",["$q","$http",function($q,$http){$http.defaults.headers.common["Content-type"]="application/json";var baseUrl="rest",serialize=function(obj){return JSON.stringify(obj)};return{createTask:function(data){var q=$q.defer();$http.put(baseUrl+"/tasks",data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getTasks:function(){var q=$q.defer();$http.get(baseUrl+"/tasks").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getTask:function(id){var q=$q.defer();$http.get(baseUrl+"/tasks/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},updateTask:function(id,data){var q=$q.defer();$http.post(baseUrl+"/tasks/"+id,data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},deleteTask:function(id){var q=$q.defer();$http.delete(baseUrl+"/tasks/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},addPeopleToTask:function(taskId,peopleId){var q=$q.defer();$http.post(baseUrl+"/tasks/"+taskId+"/people/"+peopleId).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},addCompetenceToTask:function(taskId,competenceId){var q=$q.defer();$http.post(baseUrl+"/tasks/"+taskId+"/competences/"+competenceId).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},addPoolToTask:function(taskId,poolId){var q=$q.defer();$http.post(baseUrl+"/tasks/"+taskId+"/pools/"+poolId).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},addTaskToPeople:function(peopleId,taskId){var q=$q.defer();$http.post(baseUrl+"/people/"+peopleId+"/tasks/"+taskId).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},addTaskToTask:function(taskId1,taskId2){var q=$q.defer();$http.post(baseUrl+"/tasks/"+taskId1+"/tasks/"+taskId2).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},createPool:function(data){var q=$q.defer();$http.put(baseUrl+"/pools",data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getPools:function(){var q=$q.defer();$http.get(baseUrl+"/pools").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getPool:function(id){var q=$q.defer();$http.get(baseUrl+"/pools/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},updatePool:function(id,data){var q=$q.defer();$http.post(baseUrl+"/pools/"+id,data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},deletePool:function(id){var q=$q.defer();$http.delete(baseUrl+"/pools/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},createPeople:function(data){var q=$q.defer();$http.put(baseUrl+"/people",data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getPeople:function(){var q=$q.defer();$http.get(baseUrl+"/people").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getPerson:function(id){var q=$q.defer();$http.get(baseUrl+"/people/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},updatePeople:function(id,data){var q=$q.defer();$http.post(baseUrl+"/people/"+id,data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},deletePeople:function(id){var q=$q.defer();$http.delete(baseUrl+"/people/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},createCompetence:function(data){var q=$q.defer();$http.put(baseUrl+"/competences",data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getCompetences:function(){var q=$q.defer();$http.get(baseUrl+"/competences").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getCompetence:function(id){var q=$q.defer();$http.get(baseUrl+"/competences/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},updateCompetence:function(id,data){var q=$q.defer();$http.post(baseUrl+"/competences/"+id,data).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},deleteCompetence:function(id){var q=$q.defer();$http.delete(baseUrl+"/competences/"+id).success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getUserTasks:function(id){var q=$q.defer();$http.get(baseUrl+"/users/"+id+"/tasks").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getUserPools:function(id){var q=$q.defer();$http.get(baseUrl+"/users/"+id+"/pools").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getUserPeople:function(id){var q=$q.defer();$http.get(baseUrl+"/users/"+id+"/people").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise},getUserCompetences:function(id){var q=$q.defer();$http.get(baseUrl+"/users/"+id+"/competences").success(function(data,status,headers,config){q.resolve(data,status,headers,config)}).error(function(data,status,headers,config){q.reject(data,status,headers,config)});return q.promise}}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").service("DataService",["$q","API","ModelsService","Resource",function($q,API,ModelsService,Resource){var DataSources={API:API},getDataSource=function(){return DataSources.API};return{createTask:function(task){return getDataSource().createTask(task.getDTO())},getTasks:function(){return getDataSource().getTasks().then(function(data){var tasks=[];_.each(data,function(task){var newTask=ModelsService.task(task);tasks.push(newTask)});return tasks})},updateTask:function(id,task){return getDataSource().updateTask(id,task.getDTO())},deleteTask:function(id){return getDataSource().deleteTask(id)},addPeopleToTask:function(taskId,peopleId){var that=this,q=$q.all([getDataSource().addPeopleToTask(taskId,peopleId),getDataSource().addTaskToPeople(peopleId,taskId)]);return q},addCompetenceToTask:function(taskId,competenceId){var that=this,q=$q.all([getDataSource().addCompetenceToTask(taskId,competenceId)]);return q},addPoolToTask:function(taskId,poolId){var that=this,q=$q.all([getDataSource().addPoolToTask(taskId,poolId)]);return q},addTaskToTask:function(taskId1,taskId2){var that=this,q=$q.all([getDataSource().addTaskToTask(taskId1,taskId2),getDataSource().addTaskToTask(taskId2,taskId1)]);return q},createPool:function(pool){return getDataSource().createPool(pool.getDTO())},getPools:function(){return getDataSource().getPools().then(function(data){var pools=[];_.each(data,function(pool){pools.push(ModelsService.task(pool))});return pools})},updatePool:function(id,pool){return getDataSource().updatePool(id,pool.getDTO())},deletePool:function(id){return getDataSource().deletePool(id)},createPeople:function(people){return getDataSource().createPeople(people.getDTO())},getPeople:function(){return getDataSource().getPeople().then(function(data){var people=[];_.each(data,function(peopleItem){people.push(ModelsService.people(peopleItem))});return people})},updatePeople:function(id,people){return getDataSource().updatePeople(id,people.getDTO())},deletePeople:function(id){return getDataSource().deletePeople(id)},createCompetence:function(competence){return getDataSource().createCompetence(competence.getDTO())},getCompetence:function(){return getDataSource().getCompetence().then(function(data){var competence=[];_.each(data,function(competenceItem){competence.push(ModelsService.people(competenceItem))});return people})},updateCompetence:function(id,competence){return getDataSource().updateCompetence(id,competence.getDTO())},deleteCompetence:function(id){return getDataSource().deleteCompetence(id)},getPeopleList:function(peopleList){var that=this,peopleListRequest=[];_.each(peopleList,function(people){peopleListRequest.push(getDataSource().getPerson(people))});return $q.all(peopleListRequest)},getTaskList:function(taskList){var that=this,taskListRequest=[];_.each(taskList,function(task){taskListRequest.push(getDataSource().getTask(task))});return $q.all(taskListRequest)},getPoolList:function(poolList){var that=this,poolListRequest=[];_.each(poolList,function(pool){poolListRequest.push(getDataSource().getPool(pool))});return $q.all(poolListRequest)},getCompetenceList:function(competenceList){var that=this,competenceListRequest=[];_.each(competenceList,function(competence){competenceListRequest.push(getDataSource().getCompetence(competence))});return $q.all(competenceListRequest)},getUserTasks:function(id){return getDataSource().getUserTasks(id).then(function(data){var tasks=[];_.each(data,function(task){var newTask=ModelsService.task(task);Resource.set(newTask);tasks.push(newTask)});return tasks})},getUserPools:function(id){return getDataSource().getUserPools(id).then(function(data){var pools=[];_.each(data,function(pool){var newPool=ModelsService.pool(pool);Resource.set(newPool);pools.push(newPool)});return pools})},getUserCompetences:function(id){return getDataSource().getUserCompetences(id).then(function(data){var competences=[];_.each(data,function(competence){competences.push(ModelsService.competence(competence))});return competences})},getUserPeople:function(id){return getDataSource().getUserPeople(id).then(function(data){var people=[];_.each(data,function(peopleItem){var newPeople=ModelsService.people(peopleItem);Resource.set(newPeople);people.push(newPeople)});return people})}}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").service("ModelsService",["typeNames",function(typeNames){var context=stampit().state({typeName:typeNames.CONTEXT});var element=stampit().enclose(function(contextInstance){var localContext=contextInstance||this.localContext||context();this.getContext=function(){return this.localContext||context()};this.setContext=function(options,contextInstance){this.localContext=context(_.extend(options,contextInstance||{}));return this};this.context=function(options,contextInstance){return this.setContext(options,contextInstance)}}).state({_id:null,typeName:typeNames.ELEMENT}).methods({getDTO:function(){return _.omit(this,"typeName")},getId:function(){return this._id}});var collection=stampit().state({collection:[]}).methods({addToCollection:function(){var items=arguments,that=this;_.each(items,function(item){if(that.collection.indexOf(item)===-1)that.collection.push(item)});return that},add:function(){var items=arguments,that=this;_.each(items,function(item){that.collection.push(item)});return that},indexOf:function(item){var that=this;return that.collection.indexOf(item)},filter:function(filter){return _.where(this.collection,filter)},find:function(item){var index=-1,that=this;_.find(that.collection,function(collectionItem){index++;if(_.isEqual(item,collectionItem)){return 1}});return index},get:function(index){return this.collection[index]},remove:function(item){while(this.indexOf(item)!==-1)this.collection.splice(this.indexOf(item),1);return this},clear:function(){while(!this.isEmpty()){this.remove(this.get(0))}return this},size:function(){return this.collection.length},isEmpty:function(){return this.size()===0},move:function(oldIndex,newIndex){if(newIndex>=this.collection.length){var k=newIndex-this.collection.length;while(k--+1){this.collection.push(undefined)}}this.collection.splice(newIndex,0,this.collection.splice(oldIndex,1)[0]);return this},first:function(index){this.move(index,0);return this},last:function(index){this.move(index,this.size()-1);return this},toArray:function(){return this.collection}});var section=stampit.compose(element,collection).enclose(function(contextInstance){this.setContext(contextInstance)}).state({expanded:false,subsections:{}}).methods({count:function(){var itemsCount=0;_.each(this.subsections,function(subsection){itemsCount=itemsCount+subsection.collection.length});return itemsCount},expand:function(){this.expanded=true},contract:function(){this.expanded=false},toggle:function(){this.expanded=!this.expanded},remove:function(element){_.each(this.subsections,function(subsection){var index=subsection.collection.indexOf(element);if(index!==-1){subsection.collection.splice(index,1)}})}});var subsection=stampit.compose(section,collection).enclose(function(contextInstance){this.setContext(contextInstance)}).state({label:"Subsection",expanded:false}).methods({expand:function(){this.expanded=true},contract:function(){this.expanded=false},toggle:function(){this.expanded=!this.expanded}});var bceCollection=stampit.compose(collection).methods({indexOfResource:function(resourceId){if(!resourceId)return-1;var match=this.filter({resourceId:resourceId})[0];if(match){return this.indexOf(match)}return-1},add:function(){var items=arguments,that=this;_.each(items,function(item){var index=that.indexOfResource(item.resourceId);if(index===-1){that.collection.push(item)}else{that.last(index)}});return that}});var bce=stampit.compose(element).enclose(function(contextInstance){this.setContext(contextInstance);this.subBces=bceCollection();this.modules.tasks.resources=collection();this.modules.competences.resources=collection();this.modules.people.resources=collection();this.modules.pools.resources=collection()}).state({typeName:typeNames.BCE,icon:"th",modules:{tasks:{icon:"list-alt",label:"Tasks"},people:{icon:"user",label:"People"},pools:{icon:"folder-close",label:"Pools"},competences:{icon:"briefcase",label:"Competences"}},subBces:null,expanded:false,editing:false,timestamp:new Date,size:"LL"}).methods({addModule:function(module,resource){this.modules[module]?this.modules[module].resource.push(resource):angular.noop()},addSubBce:function(subbce){this.subBces.add(subbce);return this},edit:function(){this.editing=true;return this},unedit:function(){this.editing=false;return this}});var people=stampit.compose(element).enclose().state({typeName:typeNames.PEOPLE,title:"",description:"",creator:null,location:"",creationDate:null,publishDate:null,startDate:null,endDate:null,deleteDate:null,type:"",occupation:"",progress:0,visibility:false,privacy:null,verified:false,updateDate:null}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var pool=stampit.compose(element).enclose().state({typeName:typeNames.POOL,title:"",description:"",creator:null,location:"",creationDate:null,publishDate:null,startDate:null,endDate:null,deleteDate:null,type:"",visibility:false,privacy:null,verified:false,updateDate:null}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var task=stampit.compose(element).enclose().state({typeName:typeNames.TASK,title:"",description:"",creator:null,location:"",creationDate:null,status:"",publishDate:null,startDate:null,endDate:null,deleteDate:null,progress:0,visibility:false,privacy:null,verified:false,updateDate:null,estimatedEffort:0,effort:0}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var competence=stampit.compose(element).enclose().state({typeName:typeNames.COMPETENCE,title:"",description:"",creator:null,creationDate:null,publishDate:null,startDate:null,type:"",verified:false,updateDate:null}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var communication=stampit.compose(element).enclose().state({typeName:typeNames.COMMUNICATION,title:"",description:"",creator:null,creationDate:null,publishDate:null,startDate:null,endDate:null,deleteDate:null,visibility:false,privacy:null,verified:false}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var event=stampit.compose(element).enclose().state({typeName:typeNames.EVENT,title:"",description:"",creator:null,location:null,creationDate:null,publishDate:null,startDate:null,endDate:null,deleteDate:null,type:"",visibility:false,privacy:null,updated:false}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});var data=stampit.compose(element).enclose().state({typeName:typeNames.DATA,title:"",description:"",creator:null,location:"",creationDate:null,publishDate:null,startDate:null,endDate:null,deleteDate:null,type:"",visibility:false,privacy:null,verified:false,updateDate:null}).methods({getDTO:function(){return _.pick(this,["_id","title","description","creator"])}});return{bce:bce,task:task,people:people,competence:competence,pool:pool,data:data,event:event,communication:communication,section:section,subsection:subsection,collection:collection,bceCollection:bceCollection}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").service("PersistedModelsService",["$q","DataService","ModelsService","Resource",function($q,DataService,ModelsService,Resource){var persistedCommonActions={getResources:function(){var that=this;return $q.all([persistedActions.getTaskList(that.tasks||[]),persistedActions.getPoolList(that.pools||[]),persistedActions.getPeopleList(that.people||[]),persistedActions.getCompetenceList(that.competences||[])])},addPeople:function(peopleId){var that=this;return DataService.addPeopleToTask(that.getId(),peopleId)},addTask:function(taskId){var that=this;return DataService.addTaskToTask(that.getId(),taskId)},addPool:function(poolId){var that=this;return DataService.addPoolToTask(that.getId(),poolId)},addCompetence:function(competenceId){var that=this;return DataService.addCompetenceToTask(that.getId(),competenceId)}},persistedTaskActions={save:function(){var that=this;if(!this._id)return DataService.createTask(that).then(function(task){that._id=task[0]._id;Resource.set(that);return that.getId()});else return DataService.updateTask(that.getId(),that)},"delete":function(){var that=this;return DataService.deleteTask(that.getId()).then(function(){Resource.unset(that.getId())})}},persistedPeopleActions={save:function(){var that=this;if(!this._id)return DataService.createPeople(that).then(function(people){that._id=people[0]._id;Resource.set(that);return that.getId()});else return DataService.updatePeople(that.getId(),that)},"delete":function(){var that=this;return DataService.deletePeople(that.getId()).then(function(){Resource.unset(that.getId())})}},persistedPoolActions={save:function(){var that=this;if(!this._id)return DataService.createPool(that).then(function(pool){that._id=pool[0]._id;Resource.set(that);return that.getId()});else return DataService.updatePool(that.getId(),that)},"delete":function(){var that=this;return DataService.deletePool(that.getId()).then(function(){Resource.unset(that.getId())})}},persistedCompetenceActions={save:function(){var that=this;if(!this._id)return DataService.createCompetence(that).then(function(competence){that._id=competence[0]._id;Resource.set(that);return that.getId()});else return DataService.updateCompetence(that.getId(),that)},"delete":function(){var that=this;return DataService.deleteCompetence(that.getId()).then(function(){Resource.unset(that.getId())})}},persistedActions={task:function(attributes){return _.extend(ModelsService.task(attributes),persistedCommonActions,persistedTaskActions)},people:function(attributes){return _.extend(ModelsService.people(attributes),persistedCommonActions,persistedPeopleActions)},pool:function(attributes){return _.extend(ModelsService.pool(attributes),persistedCommonActions,persistedPoolActions)},competence:function(attributes){return _.extend(ModelsService.competence(attributes),persistedCommonActions,persistedCompetenceActions)},getTask:function(id){var that=this;return DataService.getTask(id).then(function(task){var persistedTask=_.extend(task,persistedCommonActions,persistedTaskActions);return persistedTask})},getPool:function(id){return DataService.getṔool(id).then(function(pool){return _.extend(pool,persistedCommonActions,persistedPoolActions)})},getTasks:function(){return DataService.getTasks().then(function(tasks){var persistedTasks=[];_.each(tasks,function(task){persistedTasks.push(_.extend(task,persistedCommonActions,persistedTaskActions))});return persistedTasks})},getTaskList:function(tasks){return DataService.getTaskList(tasks).then(function(data){var persistedTasks=[];_.each(data,function(task){persistedTasks.push(_.extend(task,persistedCommonActions,persistedTaskActions))});return persistedTasks})},getPoolList:function(pools){return DataService.getPoolList(pools).then(function(data){var persistedPools=[];_.each(data,function(pool){persistedPools.push(_.extend(pool,persistedCommonActions,persistedPoolActions))});return persistedPools})},getCompetenceList:function(competences){return DataService.getCompetenceList(competences).then(function(data){var persistedCompetences=[];_.each(data,function(competence){persistedCompetences.push(_.extend(competence,persistedCommonActions,persistedCompetenceActions))});return persistedCompetences})},getPeopleList:function(people){return DataService.getPeopleList(people).then(function(data){var persistedPeople=[];_.each(data,function(people){persistedPeople.push(_.extend(people,persistedCommonActions,persistedPeopleActions))});return persistedPeople})},getPools:function(){return DataService.getPools().then(function(pools){var persistedPools=[];_.each(pools,function(pool){persistedPools.push(_.extend(pool,persistedCommonActions,persistedPoolActions))});return persistedPools})},getUserTasks:function(id){return DataService.getUserTasks(id).then(function(tasks){var persistedTasks=[];_.each(tasks,function(task){var newTask=_.extend(task,persistedCommonActions,persistedTaskActions);Resource.set(newTask);persistedTasks.push(newTask)});return persistedTasks})},getUserPools:function(id){return DataService.getUserPools(id).then(function(pools){var persistedPools=[];_.each(pools,function(pool){var newPool=_.extend(pool,persistedCommonActions,persistedPoolActions);
Resource.set(newPool);persistedPools.push(newPool)});return persistedPools})},getUserCompetences:function(id){return DataService.getUserCompetences(id).then(function(competences){var persistedCompetences=[];_.each(competences,function(competence){var newCompetence=_.extend(competence,persistedCommonActions,persistedCompetenceActions);Resource.set(newCompetence);persistedCompetences.push(newCompetence)});return persistedCompetences})},getUserPeople:function(id){return DataService.getUserPeople(id).then(function(people){var persistedPeople=[];_.each(people,function(peopleItem){var newPeople=ModelsService.people(_.extend(peopleItem,persistedCommonActions,persistedPeopleActions));Resource.set(newPeople);persistedPeople.push(newPeople)});return persistedPeople})},getUserAllModelsInfo:function(id){var that=this,q=$q.all([that.getUserTasks(id),that.getUserPools(id),that.getUserPeople(id),that.getUserCompetences(id)]).then(function(data){return{tasks:data[0],pools:data[1],people:data[2],competences:data[3]}});return q}};return persistedActions}])})();(function(){"use strict";angular.module("frontendPrototypeApp").factory("RecursionHelper",["$compile",function($compile){return{compile:function(element,link){if(angular.isFunction(link)){link={post:link}}var contents=element.contents().remove(),compiledContents;return{pre:link&&link.pre?link.pre:null,post:function(scope,element){if(!compiledContents){compiledContents=$compile(contents)}compiledContents(scope,function(clone){element.append(clone)});if(link&&link.post){link.post.apply(null,arguments)}}}}}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").directive("ngDraggable",["$rootScope",function($rootScope){return{restrict:"A",link:function(scope,elem,attrs){elem.draggable({start:function(event,ui){elem.data("resource",scope.item.getId());elem.css({opacity:.7})},stop:function(event,ui){elem.css({opacity:1})},helper:function(){switch($(elem).attr("ng-draggable")){case"person":return $("<span>").addClass("glyphicon glyphicon-user");break;case"pool":return $("<span>").addClass("glyphicon glyphicon-folder-close");break;case"task":return $("<span>").addClass("glyphicon glyphicon-list-alt");break;case"competence":return $("<span>").addClass("glyphicon glyphicon-briefcase");break;case"bce":return $("<span>").addClass("glyphicon glyphicon-th");break}},cursor:"move",cursorAt:{left:0,top:0}});$rootScope.$broadcast("newDraggableElement",elem)}}}]).directive("ngDroppable",["$rootScope",function($rootScope){return{restrict:"A",link:function(scope,elem,attrs){var $draggableElements=$("[ng-draggable]"),bce=scope.bce;elem.droppable({hoverClass:"bce-droppable",greedy:true,accept:function(){return scope.bce.resourceId?$draggableElements:false},drop:function(event,ui){scope.$apply(function(){var resource=ui.draggable.data("resource");if(resource!==scope.bce.resourceId){switch($(ui.draggable).attr("ng-draggable")){case"person":scope.addPeople(bce,resource);break;case"pool":scope.addPool(bce,resource);break;case"task":scope.addTask(bce,resource);break;case"competence":scope.addCompetence(bce,resource);break}}})}})}}}]).directive("ngEnter",function(){return function($scope,$elem,$attrs){$elem.bind("keydown keypress",function(event){if(event.which===13&&$elem.is(":focus")){$scope.$apply(function(){$scope.$eval($attrs.ngEnter)});event.preventDefault()}})}})})();(function(){"use strict";angular.module("frontendPrototypeApp").directive("bce",["RecursionHelper","ModelsService","Resource",function(RecursionHelper,ModelsService,Resource){return{restrict:"E",priority:1,templateUrl:"views/bce.tpl.html",replace:true,scope:{bceObject:"=resource"},compile:function(element){return RecursionHelper.compile(element)},controller:["$scope","$rootScope",function($scope,$rootScope){$scope.bce=$scope.bceObject;var hideRules={LL:{"bce-header":true,"bce-title":true,"bce-icon":true,"bce-body":true,"bce-left":true,"bce-description":true,"bce-expanded-view":true,"bce-right":true,"bce-modules":true,"bce-footer":true},MM:{"bce-header":true,"bce-title":true,"bce-icon":true,"bce-body":true,"bce-left":true,"bce-description":true,"bce-footer":true},MS:{"bce-header":true,"bce-title":true,"bce-icon":true,"bce-body":true,"bce-left":true,"bce-description":true},SS:{"bce-header":true,"bce-icon":true,"bce-title":true}},icons={Task:"list-alt",Pool:"folder-open",People:"user",Competence:"briefcase"},size=$scope.bce.size;$scope.resource=$scope.bce.resourceId?Resource.get($scope.bce.resourceId):$scope.bce.resource;$scope.resource.getResources();$scope.bce.icon=icons[_.typeOf($scope.resource)]||$scope.bce.icon;var addResourcesToModuleCollection=function(module,resources){_.each(resources,function(resource){module.resources.addToCollection(resource)})};addResourcesToModuleCollection($scope.bce.modules.people,$scope.resource.people);$scope.$on("resourceDeleted",function(event,resourceId,resource){var index=$scope.bce.subBces.indexOfResource(resourceId);if(index!==-1){$scope.bce.subBces.remove($scope.bce.subBces.get(index))}switch(_.typeOf(resource)){case"Task":var index=$scope.bce.modules.tasks.resources.indexOf(resourceId);if(index!==-1)$scope.bce.modules.tasks.resources.remove($scope.bce.modules.tasks.resources.get(index));break;case"Competence":var index=$scope.bce.modules.competences.resources.indexOf(resourceId);if(index!==-1)$scope.bce.modules.competences.resources.remove($scope.bce.modules.competences.resources.get(index));break;case"People":var index=$scope.bce.modules.people.resources.indexOf(resourceId);if(index!==-1)$scope.bce.modules.people.resources.remove($scope.bce.modules.people.resources.get(index));break;case"Pool":var index=$scope.bce.modules.pools.resources.indexOf(resourceId);if(index!==-1)$scope.bce.modules.pools.resources.remove($scope.bce.modules.pools.resources.get(index));break}});$scope.expandBce=function(bce){$scope.$emit("expandBce",bce)};$scope.expandModule=function(module){_.each(module.resources.toArray(),function(resource){$scope.bce.addSubBce(ModelsService.bce({resourceId:resource,size:"MM"}).context({subBce:true}))});$scope.bce.expanded=true};$scope.save=function(){$scope.resource.save().then(function(resourceId){if(resourceId){$scope.bce.resourceId=resourceId;$rootScope.$broadcast("resourceCreated",$scope.bce.resourceId,$scope.resource)}$scope.bce.unedit()})};$scope.edit=function(event){if($scope.bce.getContext().subBce!==true){$scope.bce.edit()}else{event.stopPropagation();$scope.$emit("expandBce",{bce:$scope.bce,callback:function(newBce){newBce.edit()}})}};$scope.remove=function(event){event.stopPropagation();$scope.resource.delete().then(function(){$rootScope.$broadcast("resourceDeleted",$scope.bce.resourceId,$scope.resource)})};$scope.isShowed=function(block){if(_.isUndefined(hideRules[size]))return false;return _.isUndefined(hideRules[size][block])?false:hideRules[size][block]}}]}}])})();(function(){"use strict";angular.module("frontendPrototypeApp").filter("reverse",function(){return function(items){return items.slice().reverse()}}).filter("highlight",function(){var findAll=function(text,search){var matches=[];var find=function(text,key){var helperString=text.toLowerCase(),keyHelper=key.toLowerCase(),matches=[],lastMatch=helperString.indexOf(keyHelper);while(lastMatch!==-1){matches.push([lastMatch-helperString.length+text.length,key.length]);helperString=helperString.substring(lastMatch+key.length);lastMatch=helperString.indexOf(keyHelper)}return matches};var getUnion=function(items){var unionHelper=[],union=[];for(var i=0,ii=items.length;i<ii;i++){for(var j=0,jj=items[i][1];j<jj;j++){unionHelper[items[i][0]+j]=true}}var firstIndex=-1,length=0;for(var i=0,ii=unionHelper.length+1;i<ii;i++){if(unionHelper[i]){if(firstIndex===-1){firstIndex=i}length++}else{if(firstIndex!==-1){union.push([firstIndex,length]);firstIndex=-1;length=0}}}return union};var searchArray=search?search.split(" "):[];for(var i=0,ii=searchArray.length;i<ii;i++){if(searchArray[i]!==""){var caseMatches=find(text,searchArray[i]);for(var j=0,jj=caseMatches.length;j<jj;j++){matches.push(caseMatches[j])}}}return getUnion(matches.sort(function(a,b){return a[0]-b[0]}))};var wrapWithTag=function(text,tag,substrs){var textHelper=text;var offset=0;for(var i=0,ii=substrs.length;i<ii;i++){textHelper=textHelper.substr(0,substrs[i][0]+offset)+"<"+tag+" class='search-match'>"+textHelper.substr(substrs[i][0]+offset,substrs[i][1])+"</"+tag+">"+textHelper.substr(substrs[i][0]+offset+substrs[i][1]);offset=offset+30+tag.length}return textHelper};return function(text,search){return wrapWithTag(text,"span",findAll(text,search))}}).filter("softFilter",["Resource",function(Resource){return function(items,search){var filtered=[];angular.forEach(items,function(item){var searchKeys=(search||"").split(" ")||[];var wordsFound=0;angular.forEach(searchKeys,function(key){if((item.resourceId?Resource.get(item.resourceId).title:"").toLowerCase().indexOf(key.toLowerCase())!==-1){wordsFound=wordsFound+1}});if(wordsFound===searchKeys.length){filtered.push(item)}});return filtered}}]).filter("madeBy",function(){return function(items,user){if(!user||!(user.length>0))return items;var filtered=[];angular.forEach(items,function(item){if(item.creator===user)filtered.push(item)});return filtered}}).filter("range",function(){return function(input,total){total=parseInt(total,10);for(var i=0;i<total;i++)input.push(i);return input}}).filter("unsafe",function($sce){return function(val){return $sce.trustAsHtml(val)}}).filter("breakFilter",function(){return function(text){if(text!==undefined)return text.replace(/\n/g,"<br />")}})})();